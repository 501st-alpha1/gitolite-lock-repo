#!/usr/bin/perl

use strict;
use warnings;

use FindBin;

BEGIN { $ENV{LOCKREPO_LIBDIR} = "${FindBin::RealBin}/../lib"; }

use lib $ENV{GL_LIBDIR} $ENV{LOCKREPO_LIBDIR};
use Gitolite::Common;

use POSIX qw( strftime );

# gitolite VREF to lock and unlock (repository.  Requires companion command
# 'lock-repo' to be enabled.

# ----------------------------------------------------------------------

# see gitolite docs for what the first 7 arguments mean

die "not meant to be run manually" unless $ARGV[6];

my $ff = "$ENV{GL_REPO_BASE}/$ENV{GL_REPO}.git/gl-lockrepo";
exit 0 unless -f $ff;

our %lock;
my $t = slurp($ff);
eval $t;    ## no critic
_die "do '$ff' failed with '$@', contact your administrator" if $@;

if (    defined(%lock)
    and defined( $lock{USER} )
    and ( $lock{USER} ne $ENV{GL_USER} ) ) {
    my $time = -1;

    if ( defined( $lock{TIME} ) ) {
        $time = localtime( $lock{TIME} );
    }

    my $message = "";

    if ( defined( $lock{MESSAGE} ) ) {
        $message = $lock{MESSAGE};
    }

    _die "Repository locked by '$lock{USER}' since ${time} with message: ${message} ";
}

exit 0
